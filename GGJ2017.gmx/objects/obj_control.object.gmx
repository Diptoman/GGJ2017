<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
_baseSpeed = 2;
_levelModifier = 40;
_timeScale = 1;

//alarm[0] = 180;

enum obstacleType
{
    Switcher,
    Normal,
    Floating
}

enum obstacleSide
{
    BothUp,
    BothDown,
    TopUp,
    TopDown,
    BottomUp,
    BottomDown
}

global.syncTime = 0;
global.scr = 0;
global.maxMult = 1;

_pulse = false;

_score = 0;

_multiplier = 1;
alarm[3] = (_multiplier + 4) * room_speed;

_prevSync = true;
_currentSync = true;

_dead = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_currentAudioGridPos += 1;
if (_currentAudioGridPos &lt; 5)
    scr_setGenerator();
else
{
    //Win
    room_goto(rm_end);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_multiplier += 1;

if (_multiplier &gt; global.maxMult)
    global.maxMult = _multiplier;

if (obj_control._dead == false)
{
    a = instance_create(room_width, room_height/2, obj_text);
    a._string = "MULTIPLIER + 1";
}

alarm[3] = (_multiplier + 4) * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_pulse = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = ds_grid_get(_currentMap, _currentWidth, 1);
sideType = ds_grid_get(_currentMap, _currentWidth, 2);
size = ds_grid_get(_currentMap, _currentWidth, 3);
scr_createObstacle(type, sideType, size);
_currentWidth += 1;
alarm[1] = ds_grid_get(_currentMap, _currentWidth, 0);

_pulse = true;
alarm[2] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(room_width + 96, room_height/2 - 180, obj_switcharea);
//instance_create(room_width + 96, room_height/2 + 180, obj_switcharea);
//alarm[0] = 180;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((obj_player1._canSwitch == true) &amp;&amp; (obj_player2._canSwitch == true))
    {
        p1y = obj_player1.y;
        p2y = obj_player2.y;
        obj_player1._type = -obj_player1._type;
        obj_player2._type = -obj_player2._type;
        obj_player1._canSwitch = false;
        obj_player2._canSwitch = false;
        obj_player1._canControl = false;
        obj_player2._canControl = false;
        obj_player1.alarm[1] = room_speed/2;
        obj_player2.alarm[1] = room_speed/2;
        TweenFire(obj_player1, y__, EaseOutQuad, TWEEN_MODE_ONCE, true, 0, .5, obj_player1.y, p2y);
        TweenFire(obj_player2, y__, EaseOutQuad, TWEEN_MODE_ONCE, true, 0, .5, obj_player2.y, p1y);
        
        audio_play_sound(snd_switchSuccess,10,0);
        rect = collision_rectangle(obj_player1.x - 16, obj_player1.y - 16, obj_player1.x + 16, obj_player1.y + 16, obj_switchzone, 0, 0);
        rect._shifted = 2;
        
        //Multiplier
        _score += 100 * _multiplier * ds_grid_get(_currentMap,0,0);
    }
    
//Sync
_prevSync = _currentSync;
if (abs(abs(room_height/2 - obj_player1.y) - abs(room_height/2 - obj_player2.y)) &gt; 96)
{  
    _currentSync = false;
}
else
{
    _currentSync = true;
    global.syncTime += 1;
}

if (_prevSync == true) &amp;&amp; (_currentSync == false)
{
        //Do stuff
        _multiplier = 1;
        alarm[3] = (_multiplier + 4) * room_speed;
        a = instance_create(room_width, room_height/2, obj_text);
        a._string = "OUT OF SYNC!";
}

_score += _multiplier * ds_grid_get(_currentMap,0,0);
global.scr = _score;

//Backgroundspeed
background_hspeed = - _baseSpeed * _levelModifier;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(0, 0, "SCORE " + string(_score) + "  Multiplier " + string(_multiplier));


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
